# Generated by Django 5.0.6 on 2024-08-16 16:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('Created_at', models.DateTimeField(auto_now_add=True)),
                ('Company_name', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('Address', models.TextField()),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='inventory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Product_Name', models.CharField(max_length=255)),
                ('Batch_No', models.CharField(max_length=50)),
                ('Size', models.IntegerField()),
                ('Unit', models.CharField(max_length=25)),
                ('Quantity', models.IntegerField()),
                ('Manufacture_date', models.DateField()),
                ('Expiry_date', models.DateField()),
                ('Combo_Id', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Inventory',
            },
        ),
        migrations.CreateModel(
            name='PI_Invoice_info',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Invoice_Id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('Invoice_Date', models.DateField()),
                ('Company_Name', models.CharField(max_length=255)),
                ('Address', models.TextField()),
            ],
            options={
                'db_table': 'PI_Invoice_info',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('Description', models.TextField(null=True)),
                ('hsn_code', models.CharField(max_length=50)),
                ('Category', models.CharField(choices=[('Pesticide', 'Pesticide'), ('Fungicide', 'Fungicide'), ('Fertilizer', 'Fertilizer'), ('Herbicide', 'Herbicide'), ('Seeds', 'Seeds'), ('Bio', 'Bio')], default='Pesticide', max_length=50)),
                ('Manufacturer', models.CharField(max_length=250)),
                ('Formula', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.CharField(max_length=250)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='RI_Invoice_Info',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Return_Id', models.IntegerField(primary_key=True, serialize=False)),
                ('Return_Date', models.DateField()),
                ('To_Company_Name', models.CharField(max_length=255)),
                ('To_Address', models.TextField()),
                ('From_Company_Name', models.CharField(max_length=255)),
                ('From_Address', models.TextField()),
            ],
            options={
                'db_table': 'RI_Invoice_Info',
            },
        ),
        migrations.CreateModel(
            name='symptom',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('disease_name', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('disease_type', models.CharField(choices=[('Pest', 'Pest'), ('Fungi', 'Fungi'), ('Nematodes', 'Nematodes'), ('Bacteria', 'Bacteria')], default='Pest', max_length=15)),
                ('low_sev_formula', models.CharField(max_length=250)),
                ('low_sev_quant', models.DecimalField(decimal_places=3, max_digits=10)),
                ('low_sev_unit', models.CharField(choices=[('Kg', 'Kg'), ('Grms', 'Grms'), ('Lts', 'Lts'), ('Mls', 'Mls')], default='Grms', max_length=25)),
                ('med_sev_formula', models.CharField(max_length=250)),
                ('med_sev_quant', models.DecimalField(decimal_places=3, max_digits=10)),
                ('med_sev_unit', models.CharField(choices=[('Kg', 'Kg'), ('Grms', 'Grms'), ('Lts', 'Lts'), ('Mls', 'Mls')], default='Grms', max_length=25)),
                ('high_sev_formula', models.CharField(max_length=250)),
                ('high_sev_quant', models.DecimalField(decimal_places=3, max_digits=10)),
                ('high_sev_unit', models.CharField(choices=[('Kg', 'Kg'), ('Grms', 'Grms'), ('Lts', 'Lts'), ('Mls', 'Mls')], default='Grms', max_length=25)),
            ],
            options={
                'db_table': 'symptom',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('Phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PI_Product_info',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Id', models.IntegerField(blank=True, null=True)),
                ('Product_Name', models.CharField(blank=True, max_length=255, null=True)),
                ('Batch_No', models.CharField(blank=True, max_length=50, null=True)),
                ('Manufacture_date', models.DateField(blank=True, null=True)),
                ('Expiry_date', models.DateField(blank=True, null=True)),
                ('Size', models.IntegerField(blank=True, null=True)),
                ('Unit', models.CharField(blank=True, max_length=25, null=True)),
                ('Quantity', models.IntegerField(blank=True, null=True)),
                ('BT_Rate', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('BT_Final_Amount', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('CGST', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('SGST', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('PU_Final_Amount', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('Combo_Pk_Id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('Combo_Id', models.CharField(max_length=255)),
                ('Invoice_Id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.pi_invoice_info', verbose_name='Invoice_id')),
            ],
            options={
                'db_table': 'PI_Product_info',
            },
        ),
        migrations.CreateModel(
            name='PI_Purchase_Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Final_Amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Additions', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Deductions', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Revised_Amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Comments', models.TextField()),
                ('Invoice_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.pi_invoice_info', verbose_name='Invoice_id')),
            ],
            options={
                'db_table': 'PI_Purchase_Price',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('ID', models.CharField(editable=False, max_length=200, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Batch_code', models.CharField(max_length=25)),
                ('Packaging_Size', models.IntegerField()),
                ('Unit', models.CharField(choices=[('Kg', 'Kg'), ('Grms', 'Grms'), ('Lts', 'Lts'), ('Mls', 'Mls')], default='Kg', max_length=25)),
                ('MRP', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Cost_Price', models.DecimalField(decimal_places=3, max_digits=10)),
                ('CGST', models.DecimalField(decimal_places=3, max_digits=10)),
                ('SGST', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Profit_percentage', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Selling_Price', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.product', verbose_name='Product')),
            ],
            options={
                'db_table': 'price',
            },
        ),
        migrations.CreateModel(
            name='RI_Price_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Final_Amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Additions', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Deductions', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Revised_Amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('Comments', models.TextField()),
                ('Return_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.ri_invoice_info', verbose_name='Return_Id')),
            ],
            options={
                'db_table': 'RI_Price_Info',
            },
        ),
        migrations.CreateModel(
            name='RI_Product_Info',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Id', models.IntegerField()),
                ('Product_Name', models.CharField(blank=True, max_length=255, null=True)),
                ('Batch_No', models.CharField(blank=True, max_length=50, null=True)),
                ('Manufacture_date', models.DateField(blank=True, null=True)),
                ('Expiry_date', models.DateField(blank=True, null=True)),
                ('Size', models.IntegerField(blank=True, null=True)),
                ('Unit', models.CharField(blank=True, max_length=25, null=True)),
                ('Quantity', models.IntegerField(blank=True, null=True)),
                ('BT_Rate', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('BT_Final_Amount', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('CGST', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('SGST', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('PU_Final_Amount', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('Combo_Pk_Id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('Combo_Id', models.CharField(max_length=255)),
                ('Return_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.ri_invoice_info', verbose_name='Return_Id')),
            ],
            options={
                'db_table': 'RI_Product_info',
            },
        ),
    ]
